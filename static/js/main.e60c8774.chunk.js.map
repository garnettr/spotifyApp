{"version":3,"sources":["config.js","hash.js","Search.js","SearchedArtist.js","TopTracks.js","RecentlyPlayed.js","IframePlayer.js","Welcome.js","Menu.js","App.js","serviceWorker.js","index.js"],"names":["scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","SearchTerms","props","onKeyUp","handleNewSearch","type","placeholder","SearchedArtist","this","searchItem","updateTrackId","className","length","map","index","tabIndex","role","onClick","e","album","id","images","url","alt","name","src","React","Component","TopTracks","state","isToggleOn","handleClick","bind","setState","prevState","topTracks","likedTracksToggle","track","artists","RecentlyPlayed","recentlyPlayed","recentlyPlayedToggle","IframePlayer","TrackInfo","TrackId","title","trackOrAlbum","width","height","frameborder","allowtransparency","allow","Welcome","userInfo","display_name","Menu","showTracksToggle","showHideLikedTracks","App","access_token","key","newSearch","artist","target","value","complete","setNewSearch","_token","artist_search","grabCurrentSearch","token","a3","$","beforeSend","xhr","setRequestHeader","success","data","tracks","items","done","r3","duration_ms","is_playing","progress_ms","getCurrentlyPlaying","image","a1","a2","console","log","r1","r2","href","join","Search","showHidePlayedTracks","showRecentlyPlayed","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e60c8774.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\n// Replace with your app's client ID, redirect URI and desired scopes\nexport const clientId = \"f32e05acbde1489180850abfb7d16457\";\nexport const redirectUri = \"https://garnettr.github.io/spotifyApp/\";\nexport const scopes = [\n  \"user-top-read\",\n  \"user-follow-read\",\n  \"user-library-read\",\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-modify-playback-state\",\n  \"user-read-playback-state\",\n];\n\n\n\n// https://garnettr.github.io/spotifyApp/\n\n// \"https://pages.git.generalassemb.ly/igarnett/theGetDown/\"\n","// Get the hash of the url\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\nexport default hash;\n","import React from \"react\";\n\nconst SearchTerms = (props) => {\n  return (\n    <>\n      <input\n        onKeyUp={props.handleNewSearch}\n        type=\"text\"\n        placeholder=\"Search For Your Artist\"\n      />\n    </>\n  );\n};\n\nexport default SearchTerms;\n","import React from \"react\";\n\nclass SearchedArtist extends React.Component {\n  render() {\n    const { searchItem, updateTrackId } = this.props;\n    return (\n      <div className=\"searchedItems-wrapper imagesWrapper\">\n        {searchItem.length > 0 ? (\n          searchItem.map((item, index) => (\n            <span className=\"searchedContent\" key={item.album.id} tabIndex=\"0\" role=\"button\" \n              onClick={(e) =>\n                updateTrackId(\"album\", item.album.id, item.album.images[1].url)\n              }\n            >\n              <img alt={item.album.name} src={item.album.images[1].url} />\n            </span>\n          ))\n        ) : (\n          <div id=\"empty-list\">\n            {/* <p>Your Searched Album List is Empty</p> */}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport { SearchedArtist };\n","import React from \"react\";\n\nclass TopTracks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: false};\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n  }\n\n  render() {\n    const { topTracks, updateTrackId, likedTracksToggle } = this.props;\n    return (\n      <section className=\"likedTracks-Wrapper imagesWrapper\">\n      \n      <figure className={likedTracksToggle ? \"show\" : \"hidden\"}>\n\n      <span className=\"trackHeader-container\">\n        <h4 className=\"likedTracks-Header\">Liked Tracks\n        </h4>\n        <button onClick={this.handleClick}>{this.state.isToggleOn ? 'Condense' : 'Show All'}</button>\n      </span>\n\n      <div className=\"tracksWrapper\">\n          <span>\n          { topTracks.map((item, index) => \n\n              index <= 4 ? \n                <span className=\"trackInfo-btn\" key={item.track.id} tabIndex=\"0\" role=\"button\" onClick={(e) => updateTrackId(\"track\",item.track.id,item.track.album.images[1].url)}>\n                  <img alt={item.track.artists[0].name} src={item.track.album.images[1].url} />\n                  <span>\n                    <h4>{item.track.name}</h4>\n                    <p>{item.track.artists[0].name}</p>\n                </span>\n                </span>\n              : null\n                \n            )}\n\n          </span>\n          \n          <span className={this.state.isToggleOn ? 'shown' : 'hidden'}>\n          { topTracks.map((item, index) => \n\n            index >= 5 ? (\n              <span className=\"trackInfo-btn\" key={item.track.id} tabIndex=\"0\" role=\"button\" onClick={(e) => updateTrackId(\"track\",item.track.id,item.track.album.images[1].url)}>\n                <img alt={item.track.artists[0].name} src={item.track.album.images[1].url} />\n                <span>\n                  <h4>{item.track.name}</h4>\n                    <p>{item.track.artists[0].name}</p>\n                </span>\n              </span>\n            ) : null\n\n          )}\n          </span>\n      </div>\n\n\n      </figure>\n      \n      </section>\n    );\n  }\n}\n\nexport { TopTracks };\n","import React from \"react\";\n\nclass RecentlyPlayed extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: false};\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n  }\n\n  render() {\n    const { recentlyPlayed, updateTrackId, recentlyPlayedToggle } = this.props;\n    return (\n      <section className=\"recentlyPlayed-Wrapper imagesWrapper\">\n        \n        <figure className={recentlyPlayedToggle ? \"show\" : \"hidden\"}>\n\n        <span className=\"trackHeader-container\">\n          <h4 className=\"recentlyPlayed-Header\">Recently Played\n          </h4>\n          <button onClick={this.handleClick}>{this.state.isToggleOn ? 'Condense' : 'Show All'}</button>\n        </span>\n\n        <div className=\"tracksWrapper\">\n\n            <span>\n            { recentlyPlayed.map((item, index) => \n\n              index <= 4 ? \n                <span className=\"trackInfo-btn\" key={item.track.id} tabIndex=\"0\" role=\"button\" onClick={(e) => updateTrackId(\"track\",item.track.id,item.track.album.images[1].url)}>\n                <img alt={item.track.artists[0].name} src={item.track.album.images[1].url} />\n                  <span>\n                   <h4>{item.track.name}</h4>\n                    <p>{item.track.artists[0].name}</p>\n                  </span>\n                </span>\n              :  null\n\n            )}\n            </span>\n\n            <span className={this.state.isToggleOn ? 'Show' : 'hidden'}>\n          { recentlyPlayed.map((item, index) => \n\n            index >= 5 ? \n              <span className=\"trackInfo-btn\" key={item.track.id} tabIndex=\"0\" role=\"button\"  onClick={(e) => updateTrackId(\"track\",item.track.id,item.track.album.images[1].url)}>\n              <img alt={item.track.artists[0].name} src={item.track.album.images[1].url} />\n                <span>\n                    <h4>{item.track.name}</h4>\n                    <p>{item.track.artists[0].name}</p>\n                </span>\n              </span>\n             : null\n\n          )}\n          </span>\n        </div>\n\n        </figure>\n\n      </section>\n    );\n  }\n}\n\nexport { RecentlyPlayed };\n","import React from \"react\";\n\nclass IframePlayer extends React.Component {\n  render() {\n    const { TrackInfo } = this.props;\n    return (\n      <>\n        {TrackInfo.TrackId.length > 0 && (\n          <>\n            <div className=\"nowPlaying-image\">\n              <img alt={TrackInfo.TrackId} src={TrackInfo.images} />\n            </div>\n\n            <iframe\n              title=\"spotify-player\"\n              src={`https://open.spotify.com/embed/${TrackInfo.trackOrAlbum}/${TrackInfo.TrackId}`}\n              width=\"300\"\n              height=\"80\"\n              frameborder=\"0\"\n              allowtransparency=\"true\"\n              allow=\"encrypted-media\"\n            ></iframe>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport { IframePlayer };\n","import React from \"react\";\n\nclass Welcome extends React.Component {\n\n\n  render() {\n    const { userInfo } = this.props;\n    return (\n      <header className=\"welcome-wrapper\">\n        <div className=\"welcome-content\">\n          <span>\n            {userInfo.images.length > 0 ? (\n              <img alt=\"yourProfile\" src={userInfo.images[0].url} />\n            ) : (\n              \"\"\n            )}\n            <p>Welcome {userInfo.display_name}</p>\n          </span>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport { Welcome };\n","import React from \"react\";\n\n\nclass Menu extends React.Component { \n\n\n  render() {\n    const { showTracksToggle, showHideLikedTracks} = this.props;\n\n    return (\n      <section>\n        <button className=\"btn\" onClick={(e) => showTracksToggle()}>\n        {showHideLikedTracks ? 'Show Recently Played Tracks' : 'Show Liked Tracks'}\n        </button>\n      </section>\n    );\n  }\n\n}\n\nexport { Menu };","import React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./config\";\nimport hash from \"./hash\";\nimport SearchTerms from \"./Search\";\nimport { SearchedArtist } from \"./SearchedArtist\";\nimport { TopTracks } from \"./TopTracks\";\nimport { RecentlyPlayed } from \"./RecentlyPlayed\";\nimport { IframePlayer } from \"./IframePlayer\";\nimport \"./App.scss\";\nimport { Welcome } from \"./Welcome\";\nimport { Menu } from \"./Menu\";\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{ url: \"\" }],\n        },\n        name: \"\",\n        artists: [{ name: \"\" }],\n        duration_ms: 0,\n      },\n      userInfo: {\n        images: [{ url: \"\" }],\n        display_name: \"\",\n      },\n      searchItem: [],\n      topTracks: [],\n      recentlyPlayed: [],\n      TrackInfo: {\n        trackOrAlbum: \"\",\n        TrackId: \"\",\n        images: [{ url: \"\" }],\n      },\n      artist_search: \"\",\n      is_playing: \"Paused\",\n      progress_ms: 0,\n      likedTracksToggle: true,\n    };\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n    this.grabCurrentSearch = this.grabCurrentSearch.bind(this);\n    this.setNewSearch = this.setNewSearch.bind(this);\n    this.updateTrackId = this.updateTrackId.bind(this);\n    this.showTracksToggle = this.showTracksToggle.bind(this);\n  }\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token,\n      });\n      this.getCurrentlyPlaying(_token);\n    }\n  }\n  // --- Start Search Component Code\n  // Triggered when user hits enter on search input\n  handleNewSearch = (e) => {\n    let _token = hash.access_token;\n    if (e.key === \"Enter\") {\n      const val = e.target.value;\n      const search = {\n        artist: val,\n        complete: false,\n      };\n      const newSearch = search;\n      this.setNewSearch(newSearch);\n    }\n  };\n\n  setNewSearch = (newSearch) => {\n    let _token = hash.access_token;\n    this.setState(\n      {\n        artist_search: newSearch,\n      },\n      () => {\n        this.grabCurrentSearch(_token);\n      }\n    );\n  };\n\n  grabCurrentSearch = (token) => {\n    let artist = this.state.artist_search;\n    var a3 = $.ajax({\n      url: `https://api.spotify.com/v1/search?q=${artist.artist}&type=track%2Cartist&market=US&limit=10&offset=5`,\n      type: \"GET\",\n      beforeSend: (xhr) => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: (data) => {\n        this.setState(\n          {\n            searchItem: data.tracks.items,\n          },\n          () => {\n            // console.log(data);\n          }\n        );\n      },\n    });\n    $.when(a3).done(function (r3) {\n      // console.log(r3[0]);\n    });\n  };\n\n  showTracksToggle = () => {\n    this.setState(\n      (state) => ({\n        likedTracksToggle: !state.likedTracksToggle,\n        recentlyPlayedToggle: !state.recentlyPlayedToggle\n      })\n    );\n  }\n  \n\n\n\n\n  // --- End Search Component Code\n\n\n  // Update Track ID\n  updateTrackId(trackOrAlbum, id, image) {\n    this.setState({\n      TrackInfo: {\n        trackOrAlbum: trackOrAlbum,\n        TrackId: id,\n        images: image,\n      },\n    });\n  }\n\n  getCurrentlyPlaying(token) {\n    var a1 = $.ajax({\n        url: \"https://api.spotify.com/v1/me/player\",\n        type: \"GET\",\n        beforeSend: (xhr) => {\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n        },\n        success: (data) => {\n          // this.setState({\n          //   item: data.item,\n          //   is_playing: data.is_playing,\n          //   progress_ms: data.progress_ms,\n          // });\n          // console.log(data);\n        },\n      }),\n      a2 = $.ajax({\n        url: \"https://api.spotify.com/v1/me/tracks\",\n        type: \"GET\",\n        beforeSend: (xhr) => {\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n        },\n        success: (data) => {\n          this.setState({\n            topTracks: data.items,\n          });\n        },\n      }),\n      a3 = $.ajax({\n        url: \"https://api.spotify.com/v1/me\",\n        type: \"GET\",\n        beforeSend: (xhr) => {\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n        },\n        success: (data) => {\n          this.setState({\n            userInfo: data,\n          });\n        },\n      }),\n      a4 = $.ajax({\n        url: \"https://api.spotify.com/v1/me/player/recently-played\",\n        type: \"GET\",\n        beforeSend: (xhr) => {\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n        },\n        success: (data) => {\n          this.setState({\n            recentlyPlayed: data.items,\n          });\n          console.log(data);\n        },\n      }),\n      a5 = $.ajax({\n        url: \"https://api.spotify.com/v1/me/player/play\",\n        type: \"PUT\",\n        beforeSend: (xhr) => {\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n        },\n        success: (data) => {\n          this.setState({});\n          console.log(data);\n        },\n      });\n\n    $.when(a1, a2).done(function (r1, r2) {});\n  }\n\n  render() {\n    return (\n        <>\n          {!this.state.token && (\n            <section className=\"introWrapper\">\n\n            <div className=\"introContent\">\n\n            <h1>Hey.</h1>\n            <p>This app is built using Spotify's open source API, allowing the user to securely sign in to their profile and view a custom dashboard. \n            <br></br><br></br>\n            View your <b>recently liked tracks, played artist </b> and <b>search for artists.</b>\n            </p>\n\n              <a className=\"btn btn-dark\"\n              href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n                \"%20\"\n              )}&response_type=token&show_dialog=true`}>\n\n            \n              See how it works\n            </a>\n            </div>\n\n\n            </section>\n          )}\n\n          {this.state.token && (\n            <>\n            <Welcome userInfo={this.state.userInfo} />\n            <section className=\"contentWrapper vibesoff\">\n              <section className=\"searchWrapper\">\n                <SearchTerms\n                  handleNewSearch={this.handleNewSearch}\n                  searchItem={this.state.searchItem}\n                />\n                <IframePlayer TrackInfo={this.state.TrackInfo} />\n                <SearchedArtist\n                  searchItem={this.state.searchItem}\n                  updateTrackId={this.updateTrackId}\n                  TrackId={this.state.TrackId}\n                />\n              </section>\n              <section className=\"likedTracksContent\">\n                <TopTracks\n                  topTracks={this.state.topTracks}\n                  updateTrackId={this.updateTrackId}\n                  likedTracksToggle={this.state.likedTracksToggle}\n                />\n                <RecentlyPlayed\n                  recentlyPlayed={this.state.recentlyPlayed}\n                  recentlyPlayedToggle = {this.state.recentlyPlayedToggle}\n                  updateTrackId={this.updateTrackId}\n                />\n\n              </section>\n            </section>\n\n            <footer>\n              <Menu \n              showHideLikedTracks={this.state.likedTracksToggle}\n              showTracksToggle ={this.showTracksToggle}\n              showHidePlayedTracks={this.state.recentlyPlayedToggle}\n              showRecentlyPlayed = {this.showRecentlyPlayed}\n              \n              />\n            </footer>\n\n              {/* <Player\n                item={this.state.item}\n                is_playing={this.state.is_playing}\n                progress_ms={this.progress_ms}\n              /> */}\n            </>\n          )}\n        </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}