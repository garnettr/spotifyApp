{"version":3,"sources":["config.js","hash.js","Search.js","SearchedArtist.js","TopTracks.js","RecentlyPlayed.js","IframePlayer.js","Welcome.js","App.js","serviceWorker.js","index.js"],"names":["scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","SearchTerms","props","searchItem","items","react_default","a","createElement","Fragment","onKeyUp","handleNewSearch","type","placeholder","SearchedArtist","_this$props","this","updateTrackId","className","length","map","index","href","onClick","e","album","id","images","url","src","React","Component","TopTracks","topTracks","track","RecentlyPlayed","recentlyPlayed","IframePlayer","TrackInfo","TrackId","concat","trackOrAlbum","width","height","frameborder","allowtransparency","allow","Welcome","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isToggleOn","updateBkg","bind","assertThisInitialized","toggleBkg","_this2","setState","truthFalse","body","document","userInfo","display_name","App","access_token","key","newSearch","artist","target","value","complete","setNewSearch","_token","artist_search","grabCurrentSearch","token","a3","$","beforeSend","xhr","setRequestHeader","success","data","tracks","console","log","done","r3","name","artists","duration_ms","is_playing","progress_ms","getCurrentlyPlaying","image","a1","a2","r1","r2","join","Welcome_Welcome","Search","IframePlayer_IframePlayer","TopTracks_TopTracks","RecentlyPlayed_RecentlyPlayed","SearchedArtist_SearchedArtist","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09dcbc6a.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\n// Replace with your app's client ID, redirect URI and desired scopes\nexport const clientId = \"f32e05acbde1489180850abfb7d16457\";\nexport const redirectUri = \"https://garnettr.github.io/spotifyApp/redirect/\";\nexport const scopes = [\n  \"user-top-read\",\n  \"user-follow-read\",\n  \"user-library-read\",\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-modify-playback-state\",\n  \"user-read-playback-state\",\n];\n\n// \"https://pages.git.generalassemb.ly/igarnett/theGetDown/\"\n","// Get the hash of the url\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\nexport default hash;\n","import React from \"react\";\nimport * as $ from \"jquery\";\nimport hash from \"./hash\";\n\nconst SearchTerms = (props) => {\n  const items = props.searchItem.items;\n  return (\n    <>\n      <input\n        onKeyUp={props.handleNewSearch}\n        type=\"text\"\n        placeholder=\"Search For Your Artist\"\n      />\n      {/* {console.log(items.length)} */}\n\n      {/* <img src={props.searchItem.album.images[0].url} /> */}\n    </>\n  );\n};\n\nexport default SearchTerms;\n","import React from \"react\";\n\nclass SearchedArtist extends React.Component {\n  render() {\n    const { searchItem, updateTrackId } = this.props;\n    return (\n      <div className=\"searchedItems-wrapper imagesWrapper\">\n        {searchItem.length > 0 ? (\n          searchItem.map((item, index) => (\n            <a\n              href=\"#\"\n              onClick={(e) =>\n                updateTrackId(\"album\", item.album.id, item.album.images[1].url)\n              }\n            >\n              <img src={item.album.images[1].url} />\n            </a>\n          ))\n        ) : (\n          <div id=\"empty-list\">\n            <p>Your Searched Album List is Empty</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport { SearchedArtist };\n","import React from \"react\";\n\nclass TopTracks extends React.Component {\n  render() {\n    const { topTracks, updateTrackId } = this.props;\n    return (\n      <div className=\"likedTracks-Wrapper imagesWrapper\">\n        <h4>Liked Tracks</h4>\n        {topTracks.length > 0 ? (\n          topTracks.map((item, index) => (\n            <a\n              href=\"#\"\n              onClick={(e) =>\n                updateTrackId(\n                  \"track\",\n                  item.track.id,\n                  item.track.album.images[1].url\n                )\n              }\n            >\n              <img src={item.track.album.images[2].url} />\n            </a>\n          ))\n        ) : (\n          <h2>Top Tracks</h2>\n        )}\n      </div>\n    );\n  }\n}\n\nexport { TopTracks };\n","import React from \"react\";\n\nclass RecentlyPlayed extends React.Component {\n  render() {\n    const { recentlyPlayed, updateTrackId } = this.props;\n    return (\n      <div className=\"recentlyPlayed-Wrapper imagesWrapper\">\n        <h4>Recently Played</h4>\n        {recentlyPlayed.length > 0 ? (\n          recentlyPlayed.map((item, index) => (\n            <a\n              href=\"#\"\n              onClick={(e) =>\n                updateTrackId(\n                  \"track\",\n                  item.track.id,\n                  item.track.album.images[1].url\n                )\n              }\n            >\n              <img src={item.track.album.images[2].url} />\n            </a>\n          ))\n        ) : (\n          <h2>Recently placed</h2>\n        )}\n      </div>\n    );\n  }\n}\n\nexport { RecentlyPlayed };\n","import React from \"react\";\n\nclass IframePlayer extends React.Component {\n  render() {\n    const { TrackInfo } = this.props;\n    return (\n      <>\n        {TrackInfo.TrackId.length > 0 && (\n          <>\n            <div className=\"nowPlaying-image\">\n              <img src={TrackInfo.images} />\n            </div>\n\n            <iframe\n              src={`https://open.spotify.com/embed/${TrackInfo.trackOrAlbum}/${TrackInfo.TrackId}`}\n              width=\"300\"\n              height=\"80\"\n              frameborder=\"0\"\n              allowtransparency=\"true\"\n              allow=\"encrypted-media\"\n            ></iframe>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport { IframePlayer };\n","import React from \"react\";\n\nclass Welcome extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isToggleOn: false };\n\n    // This binding is necessary to make `this` work in the callback\n    this.updateBkg = this.updateBkg.bind(this);\n    this.toggleBkg = this.toggleBkg.bind(this);\n  }\n\n  toggleBkg() {\n    this.setState(\n      (state) => ({\n        isToggleOn: !state.isToggleOn,\n      }),\n      () => {\n        this.updateBkg(this.state.isToggleOn);\n      }\n    );\n  }\n\n  updateBkg(truthFalse) {\n    let body = document.body;\n    if (truthFalse == true) {\n      body.className = \"vibesOn\";\n    } else {\n      body.className = \"vibesOff\";\n    }\n  }\n\n  render() {\n    const { userInfo } = this.props;\n    return (\n      <div className=\"welcome-wrapper\">\n        <div className=\"welcome-content\">\n          <button onClick={this.toggleBkg}>\n            {this.state.isToggleOn ? \"Vibes Off\" : \"Vibes On\"}\n          </button>\n          <span>\n            {userInfo.images.length > 0 ? (\n              <img src={userInfo.images[0].url} />\n            ) : (\n              \"\"\n            )}\n            <p>Welcome {userInfo.display_name}</p>\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport { Welcome };\n","import React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./config\";\nimport hash from \"./hash\";\nimport Player from \"./Player\";\nimport SearchTerms from \"./Search\";\nimport { SearchedArtist } from \"./SearchedArtist\";\nimport { TopTracks } from \"./TopTracks\";\nimport { RecentlyPlayed } from \"./RecentlyPlayed\";\nimport { IframePlayer } from \"./IframePlayer\";\nimport \"./App.css\";\nimport { Welcome } from \"./Welcome\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{ url: \"\" }],\n        },\n        name: \"\",\n        artists: [{ name: \"\" }],\n        duration_ms: 0,\n      },\n      userInfo: {\n        images: [{ url: \"\" }],\n        display_name: \"\",\n      },\n      searchItem: [],\n      topTracks: [],\n      recentlyPlayed: [],\n      TrackInfo: {\n        trackOrAlbum: \"\",\n        TrackId: \"\",\n        images: [{ url: \"\" }],\n      },\n      artist_search: \"\",\n      is_playing: \"Paused\",\n      progress_ms: 0,\n    };\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n    this.grabCurrentSearch = this.grabCurrentSearch.bind(this);\n    this.setNewSearch = this.setNewSearch.bind(this);\n    this.updateTrackId = this.updateTrackId.bind(this);\n  }\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token,\n      });\n      this.getCurrentlyPlaying(_token);\n    }\n  }\n  // --- Start Search Component Code\n  // Triggered when user hits enter on search input\n  handleNewSearch = (e) => {\n    let _token = hash.access_token;\n    if (e.key === \"Enter\") {\n      const val = e.target.value;\n      const search = {\n        artist: val,\n        complete: false,\n      };\n      const newSearch = search;\n      this.setNewSearch(newSearch);\n    }\n  };\n\n  setNewSearch = (newSearch) => {\n    let _token = hash.access_token;\n    this.setState(\n      {\n        artist_search: newSearch,\n      },\n      () => {\n        this.grabCurrentSearch(_token);\n      }\n    );\n  };\n\n  grabCurrentSearch = (token) => {\n    let artist = this.state.artist_search;\n    var a3 = $.ajax({\n      url: `https://api.spotify.com/v1/search?q=${artist.artist}&type=track%2Cartist&market=US&limit=10&offset=5`,\n      type: \"GET\",\n      beforeSend: (xhr) => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: (data) => {\n        this.setState(\n          {\n            searchItem: data.tracks.items,\n          },\n          () => {\n            console.log(data);\n          }\n        );\n      },\n    });\n    $.when(a3).done(function (r3) {\n      // console.log(r3[0]);\n    });\n  };\n\n  // --- End Search Component Code\n\n  // Update Track ID\n  updateTrackId(trackOrAlbum, id, image) {\n    this.setState({\n      TrackInfo: {\n        trackOrAlbum: trackOrAlbum,\n        TrackId: id,\n        images: image,\n      },\n    });\n  }\n\n  getCurrentlyPlaying(token) {\n    var a1 = $.ajax({\n        url: \"https://api.spotify.com/v1/me/player\",\n        type: \"GET\",\n        beforeSend: (xhr) => {\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n        },\n        success: (data) => {\n          // this.setState({\n          //   item: data.item,\n          //   is_playing: data.is_playing,\n          //   progress_ms: data.progress_ms,\n          // });\n          console.log(data);\n        },\n      }),\n      a2 = $.ajax({\n        url: \"https://api.spotify.com/v1/me/tracks\",\n        type: \"GET\",\n        beforeSend: (xhr) => {\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n        },\n        success: (data) => {\n          this.setState({\n            topTracks: data.items,\n          });\n        },\n      }),\n      a3 = $.ajax({\n        url: \"https://api.spotify.com/v1/me\",\n        type: \"GET\",\n        beforeSend: (xhr) => {\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n        },\n        success: (data) => {\n          this.setState({\n            userInfo: data,\n          });\n        },\n      }),\n      a4 = $.ajax({\n        url: \"https://api.spotify.com/v1/me/player/recently-played\",\n        type: \"GET\",\n        beforeSend: (xhr) => {\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n        },\n        success: (data) => {\n          this.setState({\n            recentlyPlayed: data.items,\n          });\n          console.log(data);\n        },\n      }),\n      a5 = $.ajax({\n        url: \"https://api.spotify.com/v1/me/player/play\",\n        type: \"PUT\",\n        beforeSend: (xhr) => {\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n        },\n        success: (data) => {\n          this.setState({});\n          console.log(data);\n        },\n      });\n\n    $.when(a1, a2).done(function (r1, r2) {});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          {!this.state.token && (\n            <a\n              className=\"btn btn--loginApp-link\"\n              href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n                \"%20\"\n              )}&response_type=token&show_dialog=true`}\n            >\n              Login to Spotify\n            </a>\n          )}\n\n          {this.state.token && (\n            <>\n              <Welcome userInfo={this.state.userInfo} />\n              <div className=\"leftColumn\">\n                <SearchTerms\n                  handleNewSearch={this.handleNewSearch}\n                  searchItem={this.state.searchItem}\n                />\n                <IframePlayer TrackInfo={this.state.TrackInfo} />\n              </div>\n              <div className=\"rightColumn\">\n                <TopTracks\n                  topTracks={this.state.topTracks}\n                  updateTrackId={this.updateTrackId}\n                />\n                <RecentlyPlayed\n                  recentlyPlayed={this.state.recentlyPlayed}\n                  updateTrackId={this.updateTrackId}\n                />\n                <SearchedArtist\n                  searchItem={this.state.searchItem}\n                  updateTrackId={this.updateTrackId}\n                  TrackId={this.state.TrackId}\n                />\n              </div>\n\n              {/* <Player\n                item={this.state.item}\n                is_playing={this.state.is_playing}\n                progress_ms={this.progress_ms}\n              /> */}\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}